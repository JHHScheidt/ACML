dat = as.data.frame()
dat = as.data.frame([1,2,3;2,3,4;3,4,5])
dat = data.frame([1,2,3;1,2,3;1,2,3])
dat = data.frame(1,2,3;1,2,3;1,2,3)
dat = data.frame(1,21,2,31,2,3)
dat = data.frame({1,21,2,31,2,3},{5,6,7,8,9})
dat = data.frame(1,21,2,31,2,3)
View(dat)
dat.rbind(data.frame(4,5,6,7,8,4))
dat = rbind(dat, data.frame(4,5,6,7,8,4))
mat=[[1,2,3,4,4],[12,3,4,5,5]]
mat=[1,2,3,4,4;12,3,4,5,5]
mat=matrix({1,2,3,4,2,3,4,5,5,5},2,5)
dat=data.frame(c(1,4,56,3,2),c(5,6,7,8,4),c(47,4,3,2,1))
newDat = apply(dat, 1, function(x) print(x))
newDat = apply(dat, 1, function(x) if(is.null(x)) return(x) else if(floor(x)-x<0) return(NULL) else return(x))
View(newDat)
View(newDat)
dat=data.frame(c(1,4,56,3,2),c(5,6,7,8,4),c(47,4,3,2.3,1))
newDat = apply(dat, 1, function(x) if(is.null(x)) return(x) else if(floor(x)-x<0) return(NULL) else return(x))
View(newDat)
dat(1)
dat[1]
dat[3,4]
dat[2,1]
dat[4,3]
floor(dat[4,3])
newDat = apply(dat, 1, function(x) {print(x) if(is.null(x)) return(x) else if(floor(x)-x<0) return(NULL) else return(x)})
newDat = apply(dat, 1, function(x) {if(is.null(x)) return(x) else if(floor(x)-x<0) return(NULL) else return(x)})
View(newDat)
newDat = apply(
dat, 1, function(x) {
print(floor(x)-x);
if(is.null(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)
}
)
View(newDat)
print(is.null(x));
print(floor(x)-x);
return(tmp)
print(tmp);
dat=as.matrix(data.frame(c(1,4,56,3,2),c(5,6,7,8,4),c(47,4,3,2,1)))
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(x);print(y)})
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(x+y)})
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(dat[x,y])})
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(dat[x])})
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(dat[y])})
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(dat[1,y])})
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(dat[x,y])})
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(dat[y,x])})
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(dat[1:x,1:y])})
newDat = outer(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(dat[x,y])})
dat[1,1]
dat[1,2]
newDat = inner(1:nrow(dat), 1:ncol(dat), FUN=function(x,y) {print(dat[x,y])})
newDat = apply(dat, 1:2, function(x,y) {print(dat[x,y])})
newDat = apply(dat, 1:2, function(x) {print(x)})
newDat = apply(dat, 1:2, function(x) {if(is.null(tmp))
return(tmp)
else if(floor(tmp)-tmp<0)
return(NULL)
else
return(tmp)})
newDat = apply(dat, 1:2, function(x) {if(is.null(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
View(newDat)
View(dat)
View(newDat)
dat=as.matrix(data.frame(c(1,4,56.2,3,2),c(5,6,7,8,4),c(47,4,3,2,1)))
newDat = apply(dat, 1:2, function(x) {if(is.null(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
View(newDat)
View(newDat)
newDat = apply(newDat, 1:2, function(x) {if(is.null(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
dat
newDat = apply(dat, 1:2, function(x) {if(is.null(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
print(x)
return(x);
newDat = apply(dat, 1:2, function(x) {if(is.null(x)) {
print(x);
return(x);
}
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
newDat = apply(dat, 1:2, function(x) {print(x);if(is.null(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
newDat = apply(newDat, 1:2, function(x) {print(x);if(is.null(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
newDat = apply(newDat, 1:2, function(x) {if(x==NULL)
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
newDat = apply(newDat, 1:2, function(x) {if(is.integer(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
newDat = apply(newDat, 1:2, function(x) {if(!is.integer(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
View(newDat)
View(dat)
newDat=unlist(newDat)
newDat = apply(newDat, 1:2, function(x)unlist(x) )
dat=as.matrix(data.frame(c(1,4,56.2,3,2),c(5,6,7,8,4),c(47,4,NULL,2,1)))
dat=as.matrix(data.frame(c(1,4,56.2,3,2),c(5,6,7,8,4),c(47,4,3,2,1)))
newDat = apply(dat, 1:2, function(x) {if(!is.integer(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
View(newDat)
View(dat)
View(newDat)
newDat = apply(dat, 1:2, function(x) {if(!is.integer(x))
return(x)
else if(floor(x)-x<0)
return(NULL)
else
return(x)})
View(newDat)
actions <- read.csv(file=)
print(directory)
directory <- getwd()
print(script.dir)
script.dir <- dirname(sys.frame(1)$ofile)
args <- commandArgs(trailingOnly = F)
scriptPath <- normalizePath(dirname(sub("^--file=", "", args[grep("^--file=", args)])))
directory <- getwd()
directory <- source("DataPlot.r", chdir = T)
directory <- source("DataPlot.R", chdir = T)
directory <- getSrcDirectory(function(x) {x})
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
install.packages("rstudioapi")
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
directory <- getwd()
print(dirname(directory))
print(dirname(dirname(dirname(directory))))
setwd(dirname(dirname(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)))))
directory <- getwd()
print(directory)
setwd(dirname(dirname(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)))))
setwd("data")
directory <- getwd()
print(directory)
setwd(dirname(dirname(dirname(dirname(rstudioapi::getActiveDocumentContext()$path)))))
setwd("data")
directory <- getwd()
print(directory)
actions <- read.csv(file="PositionVSVelocityHeatAction.txt")
View(actions)
ggplot(actions, aes(x=X0, y=X0.1)) + geom_point()
library(ggplot2)
ggplot(actions, aes(x=X0, y=X0.1)) + geom_point()
show(actionPlot)
actionPlot <- ggplot(actions, aes(x=X0, y=X0.1, color=X0.2)) +
geom_point() +
scale_x_continuous(name="Position", limits=c(-1.2, 0.6)) +
scale_y_continuous(name="Velocity", limits=c(-0.07, 0.07))
show(actionPlot)
actionPlot <- ggplot(actions, aes(x=X0, y=X0.1, color=X0.2)) +
geom_point()
show(actionPlot)
View(actions)
qVals <- read.csv(file="PositionVSVelocityHeatQValues.txt")
View(qVals)
qValDF <- as.data.frame(qVals, colnames("Position", "Velocity", "QValue"))
colnames(qVal) <- c("Position", "Velocity", "QValue")
colnames(qVals) <- c("Position", "Velocity", "QValue")
View(qVals)
qValsPlot <- ggplot(qVals, aes(x=Position, y=Velocity, color=QValue)) +
geom_point()
show(actionPlot)
actions <- read.csv(file="PositionVSVelocityHeatAction.txt")
qVals <- read.csv(file="PositionVSVelocityHeatQValues.txt")
colnames(actions) <- c("Position", "Velocity","Action")
colnames(qVals) <- c("Position", "Velocity", "QValue")
merged <- merge(actions, qVals, by=c("Position", "Velocity"))
actionPlot <- ggplot(actions, aes(x=Position, y=Velocity, color=Action)) +
geom_point()
show(actionsPlot)
show(actionPlot)
qValsPlot <- ggplot(qVals, aes(x=Position, y=Velocity)) +
geom_point() + scale_color_manual(breaks = c("2", "1", "0"),
values=c("red", "black", "green"))
show(qValsPlot)
View(qVals)
qValsPlot <- ggplot(qVals, aes(x=Position, y=Velocity, color=QValue)) +
geom_point() + scale_color_manual(breaks = c("2", "1", "0"),
values=c("red", "black", "green"))
show(qValsPlot)
qValsPlot <- ggplot(qVals, aes(x=Position, y=Velocity, color=QValue)) +
geom_point() + scale_colour_gradient2(low="red", mid="black", high="green")
show(qValsPlot)
actionPlot <- ggplot(actions, aes(x=Position, y=Velocity, color=Action)) +
geom_point() + scale_colour_gradient2(low="blue", mid="white", high="orange")
qValsPlot <- ggplot(qVals, aes(x=Position, y=Velocity, color=QValue)) +
geom_point() + scale_colour_gradient2(low="blue", mid="white", high="orange")
show(actionPlot)
View(actions)
show(qValsPlot)
actionPlot <- ggplot(actions, aes(x=Position, y=Velocity, color=Action)) +
geom_point() + scale_colour_gradient2(low="blue", mid="white", high="orange", midpoint = 1.0)
show(actionPlot)
actions <- read.csv(file="PositionVSVelocityHeatAction.txt")
colnames(actions) <- c("Position", "Velocity","Action")
actionPlot <- ggplot(actions, aes(x=Position, y=Velocity, color=Action)) +
geom_point() + scale_colour_gradient2(low="blue", mid="white", high="orange", midpoint = 1.0)
show(actionPlot)
timeSteps <- read.csv(file="EpisodesVSTimestep.txt")
colnames(timeSteps) <- c("Episode", "Timestep")
View(timeSteps)
timestepPlot <- ggplot(qVals, aes(x=Episode, y=Timestep, color="red")) +
geom_point() + geom_smooth()
show(timestepPlot)
View(timeSteps)
timestepPlot <- ggplot(timeSteps, aes(x=Episode, y=Timestep, color="red")) +
geom_point() + geom_smooth()
show(timestepPlot)
timestepPlot <- ggplot(timeSteps, aes(x=Episode, y=Timestep)) +
geom_point() + geom_smooth(method="loess")
show(timestepPlot)
